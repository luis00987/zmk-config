#undef ZMK_BEHAVIORS_KEEP_ALL

#define ZMK_BEHAVIORS_KEEP_SK
#define ZMK_BEHAVIORS_KEEP_MT
#define ZMK_BEHAVIORS_KEEP_KT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
    quick-release;
    release-after-ms = <1000>;
};

/ {
    combos {
        compatible = "zmk,combos";

        adjL {
            timeout-ms = <200>;
            bindings = <&mo 7>;
            key-positions = <1 5>;
            layers = <0>;
        };

        SKshift {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <38 39>;
            timeout-ms = <150>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };
    };

    macros {
        minimize: minimize {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE)>, <&macro_wait_time 200>, <&kp N>;

            label = "MINIMIZE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            bindings = <
&none  &kp Q  &kp W  &kp E           &kp R           &kp T        &kp Y        &kp U        &kp I            &kp O    &kp P      &none
&none  &kp A  &kp S  &kp D           &kp F           &kp G        &kp H        &kp J        &kp K            &kp L    &kp SEMI   &none
&none  &kp Z  &kp X  &kp C           &kp V           &kp B        &kp N        &kp M        &kp COMMA        &kp DOT  &kp SLASH  &none
                     &sk LEFT_SHIFT  &lt 6 QUESTION  &lt 1 TAB    &lt 1 SPACE  &lt 3 ENTER  &lt 5 BACKSPACE
            >;
        };

        spaceL {
            bindings = <
&none  &kp ESCAPE    &kp LC(A)  &kp DEL    &kp BSPC   &none    &none  &kp BSPC   &kp QUESTION  &kp SQT   &kp DELETE    &none
&none  &kp LEFT_WIN  &kp LALT   &kp LCTRL  &kp LSHFT  &none    &none  &kp LSHFT  &kp LCTRL     &kp LALT  &kp LEFT_GUI  &none
&none  &none         &none      &none      &none      &none    &none  &none      &none         &none     &none         &none
                                &none      &none      &none    &none  &none      &none
            >;
        };

        spaceR {
            bindings = <
&none  &kp ESCAPE    &kp LC(A)  &kp DEL    &kp BSPC   &none    &none  &kp BSPC   &kp QUESTION  &kp SQT   &kp DELETE    &none
&none  &kp LEFT_WIN  &kp LALT   &kp LCTRL  &kp LSHFT  &none    &none  &kp LSHFT  &kp LCTRL     &kp LALT  &kp LEFT_GUI  &none
&none  &none         &none      &none      &none      &none    &none  &none      &none         &none     &none         &none
                                &none      &none      &none    &none  &none      &none
            >;
        };

        nav-media {
            bindings = <
&none  &none         &none     &none      &none           &none    &kp C_VOL_UP  &kp PG_UP   &kp UP      &kp PG_DN   &kp C_MUTE  &none
&none  &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp HOME      &kp LEFT    &kp DOWN    &kp RIGHT   &kp END     &none
&none  &none         &none     &none      &none           &none    &kp C_VOL_DN  &kp C_PREV  &kp C_PLAY  &kp C_NEXT  &kp CAPS    &none
                               &none      &none           &none    &mo 4         &none       &none
            >;
        };

        num {
            bindings = <
&none  &none         &none     &none      &none           &none    &kp PLUS   &kp N7      &kp N8     &kp N9  &kp STAR   &none
&none  &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp MINUS  &kp N4      &kp N5     &kp N6  &kp SLASH  &none
&none  &none         &none     &none      &none           &none    &kp N0     &kp N1      &kp N2     &kp N3  &kp EQUAL  &none
                               &none      &none           &none    &none      &kp PERIOD  &kp ENTER
            >;
        };

        symb {
            bindings = <
&none  &kp EXCL      &kp AT    &kp HASH       &kp DLLR        &kp BACKSPACE    &kp PLUS   &kp GRAVE  &kp LPAR  &kp RPAR  &kp STAR   &none
&none  &kp LEFT_GUI  &kp LALT  &kp LCTRL      &kp LEFT_SHIFT  &kp DELETE       &kp MINUS  &kp TILDE  &kp LBKT  &kp RBKT  &kp SLASH  &none
&none  &kp CARET     &kp AMPS  &kp BACKSLASH  &kp PERCENT     &kp ENTER        &kp PIPE   &kp UNDER  &kp LBRC  &kp RBRC  &kp EQUAL  &none
                               &none          &none           &none            &none      &none      &none
            >;
        };

        Fn {
            bindings = <
&none  &kp F1  &kp F2   &kp F3   &kp F4   &none    &none  &none           &none      &none     &none         &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none    &none  &kp LEFT_SHIFT  &kp LCTRL  &kp LALT  &kp LEFT_GUI  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none    &none  &none           &none      &none     &none         &none
                        &none    &none    &none    &none  &none           &none
            >;
        };

        adj {
            bindings = <
&none  &none  &none  &none  &none  &none          &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none  &none  &none  &none  &none          &none         &none           &none         &none         &bt BT_CLR    &none
&none  &none  &none  &none  &none  &none          &none         &none           &none         &none         &none         &none
                     &none  &none  &bootloader    &bootloader   &studio_unlock  &out OUT_TOG
            >;
        };
    };
};
